type Bookmark {
    id: ID!
    title: String!
    url: String!
    description: String
    category: Category
    createdDate: Date!
}
input CreateBookmarkInput {
    title: String!
    url: String!
    description: String
}

input AddBookmarkToCategoriesInput {
    bookmarkId: Int!
    """
    Category id
    """
    categoryId: Int!
}

input UpdateBookmarkInput {
    id: Int!
    title: String
    description: String
    url: String
    categoryId: Int
}
type Query {
    bookmark(id: Int!): BookmarkResult!
}
union BookmarkResult = BaseError | Bookmark
union CreateBookmarkResult = BaseError | Bookmark
union AddBookmarkToCategoriesResult = BaseError | Bookmark
union UpdateBookmarkResult = BaseError | Bookmark
type Mutation {
    "Returns null if bookmark wasn't created"
    createBookmark(data: CreateBookmarkInput!): CreateBookmarkResult!
    updateBookmark(data: UpdateBookmarkInput!): UpdateBookmarkResult!
    addBookmarkToCategories(data: AddBookmarkToCategoriesInput!): AddBookmarkToCategoriesResult!
}
