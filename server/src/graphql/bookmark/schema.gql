type Bookmark {
    id: ID!
    title: String!
    url: String!
    description: String
    category: Category
    createdDate: Date!
}
input CreateBookmarkInput {
    title: String!
    url: String!
    description: String
}

input AddBookmarkToCategoriesInput {
    bookmarkId: Int!
    """
    Category id
    """
    categoryId: Int!
}

input UpdateBookmarkInput {
    id: Int!
    title: String
    description: String
    url: String
    categoryId: Int
}

union BookmarkResult = BaseError | Bookmark

type Query {
    bookmark(id: Int!): BookmarkResult!
}

type Mutation {
    "Returns null if bookmark wasn't created"
    createBookmark(data: CreateBookmarkInput!): BookmarkResult!
    updateBookmark(data: UpdateBookmarkInput!): BookmarkResult!
    addBookmarkToCategories(data: AddBookmarkToCategoriesInput!): BookmarkResult!
}
